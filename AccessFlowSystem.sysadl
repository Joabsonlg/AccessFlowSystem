Model SysADLModel ; package SysADL.types { value type Int { } value type Boolean { } value type String { } value type Void { } value type Real { } } Requirement TicketIssuanceFR ( 1 ) { text = "O sistema deve permitir ao usuário solicitar e receber um ticket com código QR para acesso e transações." derive SystemAccessControlFR , BeveragePurchaseFR , ReadySnackPurchaseFR , OnDemandSnackOrderingFR , PaymentProcessingFR ; } Requirement SystemAccessControlFR ( 2 ) { text = "O sistema deve validar os tickets na entrada e saída usando catracas eletrônicas controladas." } Requirement BeveragePurchaseFR ( 3 ) { text = "O sistema deve permitir a compra de bebidas por máquinas automáticas usando o ticket." } Requirement ReadySnackPurchaseFR ( 4 ) { text = "O sistema deve permitir a compra de lanches prontos através de máquinas automáticas utilizando o ticket." } Requirement OnDemandSnackOrderingFR ( 5 ) { text = "O sistema deve permitir o pedido de lanches feitos sob demanda através de terminais de pedido." derive SnackPickupFR ; } Requirement SnackPickupFR ( 6 ) { text = "O sistema deve permitir a retirada de lanches sob demanda em pontos de coleta específicos." } Requirement PaymentProcessingFR ( 7 ) { text = "O sistema deve processar os pagamentos de forma eletrônica, garantindo a verificação no término da visita." } Requirement PerformanceNFR ( 8 ) { text = "O sistema deve garantir um tempo de resposta rápido nas transações e no controle de acesso." } Requirement AvailabilityNFR ( 9 ) { text = "O sistema deve estar disponível 24 por dia 7 dias por semana, exceto por eventuais manutenções." } Requirement UsabilityNFR ( 10 ) { text = "O sistema deve oferecer interfaces intuitivas para a interação com os usuários." } Requirement MaintainabilityNFR ( 11 ) { text = "O sistema deve ser fácil de manter e atualizar, com suporte para mudanças rápidas e eficientes." } Requirement ScalabilityR ( 12 ) { text = "O sistema deve ser capaz de escalar para suportar um aumento de clientes e transações." }